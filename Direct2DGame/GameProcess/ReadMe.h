#pragma once

//=============================게임 엔진에 대한 설명===============================

// 게임오브젝트는 컴포넌트 기반으로 설계하고있다.

// 가장 상단의 GameProcess가 Manager 와 D2dRenderer를 가진다
// Initalize를 통해서 미리 생성한 D2dRenderer를 가져오고 Manager들을 초기화한다.

// ============================게임 루프==========================
// 1. timeManager 와 inputManager로 델타타입과 키입력을 처리한다.

// 2. 물리 처리 단계에서는 간단한 게임의 물리 처리를 진행한다 
//   물리처리는 한 프레임이 낮으면 여러번 호출된다. 
// 3. 물리 처리 단계에서는 GameObject가 RigidBody와 연관이 있다.
//
// 4. 충돌처리 단계에서는 오브젝트의 타입에 따라서 충돌을 처리하고 
//   충돌처리는 각각 AABB, OBB, CC, CircleAndBox 처리가 있다.
//   Collision 정보로는 상대방 게임 오브젝트와 충돌체를 반환한다. 
//   x-> 충돌후의 물리적인 처리는 미구현

// 5. 게임 오브젝트 업데이트 단계는 게임 오브젝트의 타입에의 순서대로 업데이트를 진행한다
//  게임 오브젝트는 컴포넌트를 가지고 이 컴포넌트는 CALL_ORDER 에따라 순서대로 이벤트가 발생한다

// 6. UIManager를 통해서 마우스에 관한 이벤트를 호출한다. 뎁스 구현 예정

// 7. 랜더링은 D2D랜더러를 사용해서 랜더링한다. 
//  랜더링함수 호출순서는 PreRender -> Render -> PostRender 순으로 호출한다
//  디버그 정보는 F5를 사용해서 On/Off가 가능하다.

// 8. 이벤트 지연처리는 오브젝트의 삭제, 생성, 씬 변경등의 이벤트들을 관리한다.

//=================================================================
